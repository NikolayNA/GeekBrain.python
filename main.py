# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.

l = [5, 4.7, 'Хорошо', True] # Создаем список.
for i in l: # Выводим тип каждого элемента в списке.
    print(f'{i} это {type(i)}')

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями
# обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве
# элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().

a_count = int(input("Введите количество элементов в списке: ")) # Узнаем у пользователя количество элементов списка
l = []
b = 0
a = 0
while b < a_count:
    l.append(input("Введите следующее значение элемента списка: ")) # Запрашиваем каждый элемент отдельно.
    b += 1

for i in range(int(len(l)/2)): # Меняем местами пары элементов.
        l[a], l[a + 1] = l[a + 1], l[a]
        a += 2
print(l) # Выводим список с учетом изменений позиций элементов.

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

num = int(input("Введите номер месяца (от 1 до 12): ")) # Узнаем номер месяца.
month = {1: 'Январь', 2: 'Февраль', 3: 'Март', 4: 'Апрель', 5: 'Май', 6: 'Июнь', 7: 'Июль', 8: 'Август', 9: 'Сентябрь', 10: 'Октябрь', 11: 'Ноябрь', 12: 'Декабрь'} # Тут храним каталог, в котором устанавливаем соотношение номера и месяца.
if num > 0 and num < 13: # Проверяем, соблюдает ли Пользователь инструкции.
    if num == 12 or num == 1 or num == 2: # Создаем зависимость месяца и сезона.
        season = 'Зима'
    elif num == 3 or num == 4 or num == 5:
        season = 'Весна'
    elif num == 6 or num == 7 or num == 8:
        season = 'Лето'
    else:
        season = 'Осень'
    print("Месяц "+month.get(num)+' относится к сезону ' + season) # Выводим сообщение для Пользователя.
else:
    print('Необходимо вводить номер месяца от 1 до 12!')

# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

l_str = input("Введите строку из нескольких слов: ")
word = []
num = 1
for i in range(l_str.count(' ') + 1):
    word = l_str.split()
    if len(str(word)) <= 10:
        print(f" {num} {word [i]}")
        num += 1
    else:
        print(f" {num} {word [i] [0:10]}")
        num += 1

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

my_list = [9, 6, 6, 3, 1] # Изначальный рейтинг.
print(f'Сейчас рейтинг имеет структуру - {my_list}')
new_r = int(input('Введите число для добавления в рейтинг: '))
for i in range(len(my_list)): # Узнаем соотношение нового числа по отношению к значениям в рейтинге.
    if my_list[i] == new_r:
        my_list.insert(i + 1, new_r)
        break
    elif my_list[0] < new_r:
        my_list.insert(0, new_r)
        break
    elif my_list[-1] > new_r:
        my_list.append(new_r)
        break
    elif my_list[i] > new_r and my_list[i + 1] < new_r:
        my_list.insert(i + 1, new_r)
        break
print(f'Сейчас рейтинг стал иметь структуру - {my_list}')
